+Types = {
    Class = ReferenceContainer
    +ThreadStatsStruct = {
        Class = IntrospectionStructure
        Thread1C = {
            Type = uint32
        }
        Thread1H = {
            Type = uint32
            NumberOfElements = 10
        }
    }
    +StatesStatsStruct = {
        Class = IntrospectionStructure
        Time = {
            Type = uint32
        }
        Idle = {
            Type = ThreadStatsStruct
        }
    }
    +ControlStruct = {
        Class = IntrospectionStructure
        StateFbDisplacement = {
            Type = float64
        }
        StateFbDisplacementDot = {
            Type = float64
        }
        StateFbAngle = {
            Type = float64
        }
        StateFbAngleDot = {
            Type = float64
        }
    }
    +StatesStruct = {
        Class = IntrospectionStructure
        StateDisplacement = {
            Type = float64
        }
        StateDisplacementDot = {
            Type = float64
        }
        StateAngle = {
            Type = float64
        }
        StateAngleDot = {
            Type = float64
        }
    }
    OutputsStruct = {
        Class = IntrospectionStructure
        OutputDisplacement = {
            Type = float64
        }
    }
    +SignalsStruct = {
        Class = IntrospectionStructure
        Time = {
            Type = uint32
        }
        Controls = {
            Type = ControlStruct
        }
        States = {
            Type = StatesStruct
        }
        Outputs = {
            Type = OutputsStruct
        }
    } 
}
+WebRoot = {
    Class = HttpObjectBrowser
    Root = "."
    +ObjectBrowse = {
        Class = HttpObjectBrowser
        Root = "/"
    }
    +ResourcesHtml = {
        Class = HttpDirectoryResource
        BaseDir = "../../MARTe2-dev/Resources/HTTP/"
    }    
    +HttpMessageInterface = {
        Class = HttpMessageInterface
        +GOTOIDLE = {
            Class = Message
            Destination = StateMachine
            Function = GOTOIDLE
            Mode = ExpectsReply
        }
        +GOTORUN = {
            Class = Message
            Destination = StateMachine
            Function = GOTORUN
            Mode = ExpectsReply
        }
        +GOTOERR = {
            Class = Message
            Destination = StateMachineError
            Function = GOTOERR 
            Mode = ExpectsReply
        }
    }
}
+WebServer = {
    Class = HttpService
    Port = 8084
    WebRoot = WebRoot
    Timeout = 0
    ListenMaxConnections = 255
    AcceptTimeout = 1000
    MaxNumberOfThreads = 8
    MinNumberOfThreads = 1
}
$TestApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +GAMReferences = {
            Class = ConstantGAM
            OutputSignals = {
                ReferenceDisplacement = {
                    DataSource = DDB1
                    Type = uint32
                    Default = 0
                }
            }
        }
        +GAMSSM = {
            Class = SSMGAM
            StateMatrix = {
                {1 0.001 0 0} 
                {0 0.9998 0.0027 0} 
                {0 0 1 0.001} 
                {0 -0.0005 0.0312 1} 
            } 
            InputMatrix = {
                {0} 
                {0.0018} 
                {0} 
                {0.0045} 
            }
            OutputMatrix = {
                {1 0 0 0} 
            }  
            FeedthroughMatrix = {
                {0} 
            }  
            ResetInEachState = 0
            SampleFrequency = 0.001
            InputSignals = {
                StateFbDisplacement = {
                    Type = float64
                    DataSource = DDB1
                }
                StateFbDisplacementDot = {
                    Type = float64
                    DataSource = DDB1
                }
                StateFbAngle = {
                    Type = float64
                    DataSource = DDB1
                }
                StateFbAngleDot = {
                    Type = float64
                    DataSource = DDB1
                }
            }
            OutputSignals = {
                OutputDisplacement = {
                    Type = float64
                    DataSource = DDB1
                }
                StateDisplacement = {
                    Type = float64
                    DataSource = DDB1
                }
                StateDisplacementDot = {
                    Type = float64
                    DataSource = DDB1
                }
                StateAngle = {
                    Type = float64
                    DataSource = DDB1
                }
                StateAngleDot = {
                    Type = float64
                    DataSource = DDB1
                }
            }
        }
        +GAMLQRController = {
            Class = MathExpressionGAM
            Expression = "
                        Gain1 = -5390500000;
                        Gain2 = -22700000;
                        Gain3 = 2156600000;
                        Gain4 = 9100000;
                        StateFbDisplacement = Gain1 * (StateDisplacement - ReferenceDisplacement);
                        StateFbDisplacementDot = Gain2 * StateDisplacementDot;
                        StateFbAngle = Gain3 * StateAngle;
                        StateFbDisplacementDot = Gain4 * StateAngleDot;
                        "
            InputSignals = {
                ReferenceDisplacement = {
                    Type = float64
                    NumberOfElements = 1
                    DataSource = DDB1
                }
                StateDisplacement = {
                    Type = float64
                    NumberOfElements = 1
                    DataSource = DDB1
                }
                StateDisplacementDot = {
                    Type = float64
                    NumberOfElements = 1
                    DataSource = DDB1
                }
                StateAngle = {
                    Type = float64
                    NumberOfElements = 1
                    DataSource = DDB1
                }
                StateAngleDot = {
                    Type = float64
                    NumberOfElements = 1
                    DataSource = DDB1
                }
            }
            OutputSignals = {
                StateFbDisplacement = {
                    Type = float64
                    DataSource = DDB1
                }
                StateFbDisplacementDot = {
                    Type = float64
                    DataSource = DDB1
                }
                StateFbAngle = {
                    Type = float64
                    DataSource = DDB1
                }
                StateFbAngleDot = {
                    Type = float64
                    DataSource = DDB1
                }
            }
        }
        +GAMSignalsWriter = {
            Class = IOGAM
            InputSignals = {
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }
                StateDisplacement = {
                    DataSource = DDB1
                    Type = float64
                }
                StateDisplacementDot = {
                    DataSource = DDB1
                    Type = float64
                }
                StateAngle = {
                    DataSource = DDB1
                    Type = float64
                }
                StateAngleDot = {
                    DataSource = DDB1
                    Type = float64
                }
                StateFbDisplacement = {
                    DataSource = DDB1
                    Type = float64
                }
                StateFbDisplacementDot = {
                    DataSource = DDB1
                    Type = float64
                }
                StateFbAngle = {
                    DataSource = DDB1
                    Type = float64
                }
                StateFbAngleDot = {
                    DataSource = DDB1
                    Type = float64
                }
            }
            OutputSignals = {
                Time = {
                    DataSource = SignalsWriter
                    Type = uint32
                    Alias = "value.Time"
                }
                StateDisplacement = {
                    DataSource = SignalsWriter
                    Type = float64
                    Alias = "value.States.Displacement"
                }
                StateDisplacementDot = {
                    DataSource = SignalsWriter
                    Type = float64
                    Alias = "value.States.DisplacementDot"
                }
                StateAngle = {
                    DataSource = SignalsWriter
                    Type = float64
                    Alias = "value.States.Angle"
                }
                StateAngleDot = {
                    DataSource = SignalsWriter
                    Type = float64
                    Alias = "value.States.AngleDot"
                }
                StateFbDisplacement = {
                    DataSource = SignalsWriter
                    Type = float64
                    Alias = "value.Control.Displacement"
                }
                StateFbDisplacementDot = {
                    DataSource = SignalsWriter
                    Type = float64
                    Alias = "value.Control.DisplacementDot"
                }
                StateFbAngle = {
                    DataSource = SignalsWriter
                    Type = float64
                    Alias = "value.Control.Angle"
                }
                StateFbAngleDot = {
                    DataSource = SignalsWriter
                    Type = float64
                    Alias = "value.Control.AngleDot"
                }
            }
        }
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
            Class = GAMDataSource
        }        
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }
        +SignalsWriter = {
            Class = FileDataSource::FileWriter
            NumberOfBuffers = 10000
            CPUMask = 1 
            StackSize = 10000000
            Filename = "/tmp/RTApp-Pendulum01.csv" 
            Overwrite = "yes" 
            FileFormat = "csv"
            CSVSeparator = "," 
            StoreOnTrigger = 0 
            Signals = {
                value = {
                    Alias = "MARTe2-Demo-App:Signals"
                    Type = SignalsStruct 
                }
            }
        }
    }
    +States = {
        Class = ReferenceContainer
        +Idle = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x2
                    Functions = {GAMReferences GAMMeasurements GAMSSM GAMSignalsWriter }
                }
            }
        }
        +Error = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x2
                    Functions = {GAMReferences}
                }
            }
        }

    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
